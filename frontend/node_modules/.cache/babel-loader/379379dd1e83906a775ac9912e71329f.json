{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/ElbrusHP/phase_3/Z_ITOGOVIY_PROECT/ITOG_FREELANCE_OFFERS/freelance-offers-aggregator/frontend/src/components/Pagination.jsx\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentPageAC } from '../store/slice';\nexport default function Pagination({\n  totalPosts\n}) {\n  const {\n    currentPage,\n    postsPerPage\n  } = useSelector(state => state.slice.view);\n  const dispatch = useDispatch();\n  const pagesNumbers = [];\n  const n = Math.ceil(totalPosts / postsPerPage);\n\n  for (let i = 1; i <= n; i += 1) pagesNumbers.push(i);\n\n  const setСurrentPage = e => {\n    e.preventDefault();\n    if (currentPage !== Number(e.target.innerText)) dispatch(setCurrentPageAC(Number(e.target.innerText)));\n  };\n\n  const decreaseCurrentPage = () => {\n    if (currentPage > 1) dispatch(setCurrentPageAC(currentPage - 1));\n  };\n\n  const increaseCurrentPage = () => {\n    if (currentPage < n) dispatch(setCurrentPageAC(currentPage + 1));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: decreaseCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"(-\"), pagesNumbers.map(page => {\n    if (n < 10) return /*#__PURE__*/React.createElement(\"button\", {\n      key: page,\n      href: \"#!\",\n      onClick: setСurrentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }\n    }, page);else if (n > 10 && (page === 0 || page === n)) return /*#__PURE__*/React.createElement(\"button\", {\n      key: page,\n      href: \"#!\",\n      onClick: setСurrentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }\n    }, page);else if (n > 10 && currentPage - page > -3 && currentPage - page < 3) return /*#__PURE__*/React.createElement(\"button\", {\n      key: page,\n      href: \"#!\",\n      onClick: setСurrentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }\n    }, page);\n    {\n      /* else return <span>...</span> */\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increaseCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"-)\")));\n}","map":{"version":3,"sources":["/home/anton/Документы/GitHub/ElbrusHP/phase_3/Z_ITOGOVIY_PROECT/ITOG_FREELANCE_OFFERS/freelance-offers-aggregator/frontend/src/components/Pagination.jsx"],"names":["React","useSelector","useDispatch","setCurrentPageAC","Pagination","totalPosts","currentPage","postsPerPage","state","slice","view","dispatch","pagesNumbers","n","Math","ceil","i","push","setСurrentPage","e","preventDefault","Number","target","innerText","decreaseCurrentPage","increaseCurrentPage","map","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AACjD,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAtB,CAAjD;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,YAAY,GAAG,EAArB;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUV,UAAU,GAAGE,YAAvB,CAAV;;AACA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,CAArB,EAAwBG,CAAC,IAAI,CAA7B,EACEJ,YAAY,CAACK,IAAb,CAAkBD,CAAlB;;AAEF,QAAME,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAId,WAAW,KAAKe,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,SAAV,CAA1B,EACEZ,QAAQ,CAACR,gBAAgB,CAACkB,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,SAAV,CAAP,CAAjB,CAAR;AACH,GAJD;;AAMA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAIlB,WAAW,GAAG,CAAlB,EACEK,QAAQ,CAACR,gBAAgB,CAACG,WAAW,GAAG,CAAf,CAAjB,CAAR;AACH,GAHD;;AAKA,QAAMmB,mBAAmB,GAAG,MAAM;AAChC,QAAInB,WAAW,GAAGO,CAAlB,EACEF,QAAQ,CAACR,gBAAgB,CAACG,WAAW,GAAG,CAAf,CAAjB,CAAR;AACH,GAHD;;AAKA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEkB,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAGIZ,YAAY,CAACc,GAAb,CAAiBC,IAAI,IAAI;AACvB,QAAId,CAAC,GAAG,EAAR,EACE,oBAAO;AAAQ,MAAA,GAAG,EAAEc,IAAb;AAAmB,MAAA,IAAI,EAAC,IAAxB;AAA6B,MAAA,OAAO,EAAET,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDS,IAAvD,CAAP,CADF,KAEK,IAAId,CAAC,GAAG,EAAJ,KAAWc,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAKd,CAAlC,CAAJ,EACH,oBAAO;AAAQ,MAAA,GAAG,EAAEc,IAAb;AAAmB,MAAA,IAAI,EAAC,IAAxB;AAA6B,MAAA,OAAO,EAAET,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDS,IAAvD,CAAP,CADG,KAEA,IAAId,CAAC,GAAG,EAAJ,IAAYP,WAAW,GAAGqB,IAAd,GAAqB,CAAC,CAAvB,IAA8BrB,WAAW,GAAGqB,IAAd,GAAqB,CAAlE,EACH,oBAAO;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAmB,MAAA,IAAI,EAAC,IAAxB;AAA6B,MAAA,OAAO,EAAET,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDS,IAAvD,CAAP;AACF;AAAC;AAAoC;AACtC,GARD,CAHJ,eAaE;AAAQ,IAAA,OAAO,EAAEF,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbF,CADF,CADF;AAmBD","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentPageAC } from '../store/slice'\n\nexport default function Pagination({ totalPosts }) {\n  const { currentPage, postsPerPage } = useSelector(state => state.slice.view)\n  const dispatch = useDispatch()\n  const pagesNumbers = [];\n  const n = Math.ceil(totalPosts / postsPerPage)\n  for (let i = 1; i <= n; i += 1)\n    pagesNumbers.push(i)\n\n  const setСurrentPage = (e) => {\n    e.preventDefault()\n    if (currentPage !== Number(e.target.innerText))\n      dispatch(setCurrentPageAC(Number(e.target.innerText)))\n  }\n\n  const decreaseCurrentPage = () => {\n    if (currentPage > 1)\n      dispatch(setCurrentPageAC(currentPage - 1))\n  }\n\n  const increaseCurrentPage = () => {\n    if (currentPage < n)\n      dispatch(setCurrentPageAC(currentPage + 1))\n  }\n\n  return (\n    <>\n      <p>\n        <button onClick={decreaseCurrentPage}>(-</button>\n        {\n          pagesNumbers.map(page => {\n            if (n < 10)\n              return <button key={page} href=\"#!\" onClick={setСurrentPage}>{page}</button>\n            else if (n > 10 && (page === 0 || page === n))\n              return <button key={page} href=\"#!\" onClick={setСurrentPage}>{page}</button>\n            else if (n > 10 && ((currentPage - page > -3) && (currentPage - page < 3)))\n              return <button key={page} href=\"#!\" onClick={setСurrentPage}>{page}</button>\n            {/* else return <span>...</span> */ }\n          })\n        }\n        <button onClick={increaseCurrentPage}>-)</button>\n      </p>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}