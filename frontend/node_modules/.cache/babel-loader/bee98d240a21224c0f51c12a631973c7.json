{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/ElbrusHP/freelance_offers/freelance-offers-aggregator/frontend/src/components/pages/Login.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { loginAC } from '../../store/slice.js';\nexport default function Login() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const initialState = {\n    email: '',\n    password: ''\n  };\n  const [state, setState] = useState(initialState);\n  const axiosQ = axios.create({\n    withCredentials: true\n  });\n\n  const changeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const response = await axiosQ.post('http://localhost:3003/login', state);\n\n    if (response.status === 200) {\n      setState(initialState);\n      dispatch(loginAC(response.data));\n      history.push('/main');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"formLable\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"\\u0415\\u043C\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formInput\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    onChange: changeHandler,\n    value: state.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"formLable\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formInput\",\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    onChange: changeHandler,\n    value: state.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"formBtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"));\n}","map":{"version":3,"sources":["/home/anton/Документы/GitHub/ElbrusHP/freelance_offers/freelance-offers-aggregator/frontend/src/components/pages/Login.jsx"],"names":["React","useState","useDispatch","useHistory","axios","loginAC","Login","dispatch","history","initialState","email","password","state","setState","axiosQ","create","withCredentials","changeHandler","e","name","value","target","submitHandler","preventDefault","response","post","status","data","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,QAAQ,EAAE;AAFS,GAArB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACQ,YAAD,CAAlC;AACA,QAAMK,MAAM,GAAGV,KAAK,CAACW,MAAN,CAAa;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAAb,CAAf;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAR,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACO,IAAD,GAAQC;AAApB,KAAD,CAAR;AACD,GAHD;;AAKA,QAAME,aAAa,GAAG,MAAOJ,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,IAAP,CAAY,6BAAZ,EAA2Cb,KAA3C,CAAvB;;AACA,QAAIY,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3Bb,MAAAA,QAAQ,CAACJ,YAAD,CAAR;AACAF,MAAAA,QAAQ,CAACF,OAAO,CAACmB,QAAQ,CAACG,IAAV,CAAR,CAAR;AACAnB,MAAAA,OAAO,CAACoB,IAAR,CAAa,OAAb;AACD;AACF,GARD;;AAUA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEN,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,OAAO,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,eAEE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,IAAI,EAAC,OAAlC;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAuD,IAAA,QAAQ,MAA/D;AAAgE,IAAA,QAAQ,EAAEL,aAA1E;AAAyF,IAAA,KAAK,EAAEL,KAAK,CAACF,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,OAAO,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAHF,eAIE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,IAAI,EAAC,UAAlC;AAA6C,IAAA,IAAI,EAAC,UAAlD;AAA6D,IAAA,QAAQ,MAArE;AAAsE,IAAA,QAAQ,EAAEO,aAAhF;AAA+F,IAAA,KAAK,EAAEL,KAAK,CAACD,QAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCALF,CADF;AASD","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { loginAC } from '../../store/slice.js';\n\nexport default function Login() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const initialState = {\n    email: '',\n    password: '',\n  };\n  const [state, setState] = useState(initialState)\n  const axiosQ = axios.create({ withCredentials: true });\n\n  const changeHandler = (e) => {\n    const { name, value } = e.target\n    setState({ ...state, [name]: value })\n  }\n\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    const response = await axiosQ.post('http://localhost:3003/login', state)\n    if (response.status === 200) {\n      setState(initialState)\n      dispatch(loginAC(response.data))\n      history.push('/main')\n    }\n  }\n\n  return (\n    <form className=\"form\" onSubmit={submitHandler}>\n      <label className=\"formLable\" htmlFor=\"email\">Емайл</label>\n      <input className=\"formInput\" type=\"email\" name=\"email\" required onChange={changeHandler} value={state.email} />\n      <label className=\"formLable\" htmlFor=\"password\">Пароль</label>\n      <input className=\"formInput\" type=\"password\" name=\"password\" required onChange={changeHandler} value={state.password} />\n      <button className=\"formBtn\" type=\"submit\">Войти</button>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}