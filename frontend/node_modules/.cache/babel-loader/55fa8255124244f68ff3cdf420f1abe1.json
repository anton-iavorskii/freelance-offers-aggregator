{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/ElbrusHP/phase_3/Z_ITOGOVIY_PROECT/ITOG_FREELANCE_OFFERS/freelance-offers-aggregator/frontend/src/components/pages/profile/ProfileFeed.jsx\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CardShortP from './CardShortP';\nimport CardExpandedP from './CardExpandedP';\nimport Pagination from '../../Pagination';\nimport { setNumberOfOffersAC } from '../../../store/slice';\nexport default function ProfileFeed({\n  projects\n}) {\n  const dispatch = useDispatch();\n  const {\n    profileCurrentPage,\n    profilePostsPerPage\n  } = useSelector(state => state.slice.view);\n  const indexOfLastOffer = profileCurrentPage * profilePostsPerPage;\n  const indexOfFirstOffer = indexOfLastOffer - profilePostsPerPage;\n  const paginatedProjects = projects.slice(indexOfFirstOffer, indexOfLastOffer);\n  dispatch(setNumberOfOffersAC(projects.length));\n  if (paginatedProjects) return /*#__PURE__*/React.createElement(React.Fragment, null, paginatedProjects.length > 0 && paginatedProjects.map(project => {\n    if (project.hasExpandedSize === true) return /*#__PURE__*/React.createElement(CardExpandedP, {\n      key: project._id,\n      offer: project,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 22\n      }\n    });else return /*#__PURE__*/React.createElement(CardShortP, {\n      key: project._id,\n      offer: project,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }\n    });\n  }), projects.length > profilePostsPerPage && /*#__PURE__*/React.createElement(Pagination, {\n    totalPosts: projects.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 51\n    }\n  }));else return null;\n}","map":{"version":3,"sources":["/home/anton/Документы/GitHub/ElbrusHP/phase_3/Z_ITOGOVIY_PROECT/ITOG_FREELANCE_OFFERS/freelance-offers-aggregator/frontend/src/components/pages/profile/ProfileFeed.jsx"],"names":["React","useSelector","useDispatch","CardShortP","CardExpandedP","Pagination","setNumberOfOffersAC","ProfileFeed","projects","dispatch","profileCurrentPage","profilePostsPerPage","state","slice","view","indexOfLastOffer","indexOfFirstOffer","paginatedProjects","length","map","project","hasExpandedSize","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAChD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAA8CV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAtB,CAA/D;AAEA,QAAMC,gBAAgB,GAAGL,kBAAkB,GAAGC,mBAA9C;AACA,QAAMK,iBAAiB,GAAGD,gBAAgB,GAAGJ,mBAA7C;AACA,QAAMM,iBAAiB,GAAGT,QAAQ,CAACK,KAAT,CAAeG,iBAAf,EAAkCD,gBAAlC,CAA1B;AAEAN,EAAAA,QAAQ,CAACH,mBAAmB,CAACE,QAAQ,CAACU,MAAV,CAApB,CAAR;AAEA,MAAID,iBAAJ,EACE,oBACE,0CAEIA,iBAAiB,CAACC,MAAlB,GAA2B,CAA3B,IAAgCD,iBAAiB,CAACE,GAAlB,CAAsBC,OAAO,IAAI;AAC/D,QAAIA,OAAO,CAACC,eAAR,KAA4B,IAAhC,EACE,oBAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED,OAAO,CAACE,GAA5B;AAAiC,MAAA,KAAK,EAAEF,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADF,KAGE,oBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,OAAO,CAACE,GAAzB;AAA8B,MAAA,KAAK,EAAEF,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAL+B,CAFpC,EASGZ,QAAQ,CAACU,MAAT,GAAkBP,mBAAlB,iBAAyC,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEH,QAAQ,CAACU,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT5C,CADF,CADF,KAcK,OAAO,IAAP;AACN","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CardShortP from './CardShortP';\nimport CardExpandedP from './CardExpandedP';\nimport Pagination from '../../Pagination'\nimport { setNumberOfOffersAC } from '../../../store/slice'\n\nexport default function ProfileFeed({ projects }) {\n  const dispatch = useDispatch()\n  const { profileCurrentPage, profilePostsPerPage } = useSelector(state => state.slice.view)\n\n  const indexOfLastOffer = profileCurrentPage * profilePostsPerPage\n  const indexOfFirstOffer = indexOfLastOffer - profilePostsPerPage\n  const paginatedProjects = projects.slice(indexOfFirstOffer, indexOfLastOffer)\n\n  dispatch(setNumberOfOffersAC(projects.length))\n\n  if (paginatedProjects)\n    return (\n      <>\n        {\n          paginatedProjects.length > 0 && paginatedProjects.map(project => {\n            if (project.hasExpandedSize === true)\n              return <CardExpandedP key={project._id} offer={project} />\n            else\n              return <CardShortP key={project._id} offer={project} />\n          })\n        }\n        {projects.length > profilePostsPerPage && <Pagination totalPosts={projects.length} />}\n      </>\n    )\n  else return null\n}\n"]},"metadata":{},"sourceType":"module"}