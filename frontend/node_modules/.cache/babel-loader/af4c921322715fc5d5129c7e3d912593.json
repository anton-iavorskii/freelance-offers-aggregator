{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/ElbrusHP/phase_3/Z_ITOGOVIY_PROECT/ITOG_FREELANCE_OFFERS/freelance-offers-aggregator/frontend/src/components/pages/profile/ProfileStats.jsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport BarsChart from '../../BarsChart';\nimport LineChart from '../../LineChart';\nexport default function ProfileStats() {\n  const {\n    startedProjects,\n    finishedProjects,\n    favourites\n  } = useSelector(state => state.slice.user);\n  const offers = useSelector(state => state.slice.offers);\n  const favouritesAsObjects = [];\n  favourites.forEach(fav => {\n    const favOffer = offers.find(offer => offer._id == fav);\n    favouritesAsObjects.push(favOffer);\n  });\n  const months = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'];\n  const dateNow = new Date();\n  const thisMonth = dateNow.getUTCMonth(); //months from 1-12\n\n  const thisDay = dateNow.getUTCDate();\n  const thisYear = dateNow.getUTCFullYear();\n  const statsThisMonth = {\n    name: months[thisMonth],\n    start: Date.parse(new Date(thisYear, thisMonth, 1)),\n    year: thisYear,\n    startedProjects: [],\n    finishedProjects: [],\n    earned: 0\n  };\n  const statsMonthM1 = {\n    name: months[thisMonth - 1],\n    start: Date.parse(new Date(thisYear, thisMonth - 1, 1)),\n    year: thisYear,\n    startedProjects: [],\n    finishedProjects: [],\n    earned: 0\n  };\n  const statsMonthM2 = {\n    name: months[thisMonth - 2],\n    start: Date.parse(new Date(thisYear, thisMonth - 2, 1)),\n    year: thisYear,\n    startedProjects: [],\n    finishedProjects: [],\n    earned: 0\n  };\n  finishedProjects.forEach(project => {\n    if (project.finishedAtTS >= statsThisMonth.start) {\n      statsThisMonth.finishedProjects.push(project);\n      return;\n    } else if (project.finishedAtTS >= statsMonthM1.start && project.finishedAtTS < statsThisMonth.start) {\n      statsMonthM1.finishedProjects.push(project);\n      return;\n    } else if (project.finishedAtTS >= statsMonthM2.start && project.finishedAtTS < statsMonthM1.start) {\n      statsMonthM2.finishedProjects.push(project);\n      return;\n    }\n  });\n  startedProjects.forEach(project => {\n    if (project.startedAtTS >= statsThisMonth.start) {\n      statsThisMonth.startedProjects.push(project);\n      return;\n    } else if (project.startedAtTS >= statsMonthM1.start && project.startedAtTS < statsThisMonth.start) {\n      statsMonthM1.startedProjects.push(project);\n      return;\n    } else if (project.startedAtTS >= statsMonthM2.start && project.startedAtTS < statsMonthM1.start) {\n      statsMonthM2.startedProjects.push(project);\n      return;\n    }\n  });\n  statsThisMonth.earned = statsThisMonth.finishedProjects.reduce((sum, item) => sum + Number(item.budget), 0);\n  statsMonthM1.earned = statsMonthM1.finishedProjects.reduce((sum, item) => sum + Number(item.budget), 0);\n  statsMonthM2.earned = statsMonthM2.finishedProjects.reduce((sum, item) => sum + Number(item.budget), 0); // console.log(yearNow, monthNow, dayNow)\n  // const dt = new Date();\n  // console.log(startOfMonth(dt).toString());\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BarsChart, {\n    startedByMonths: [statsMonthM2.startedProjects.length, statsMonthM1.startedProjects.length, statsThisMonth.startedProjects.length],\n    finishedByMonths: [statsMonthM2.finishedProjects.length, statsMonthM1.finishedProjects.length, statsThisMonth.finishedProjects.length],\n    months: [months[thisMonth - 2], months[thisMonth - 1], months[thisMonth]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LineChart, {\n    earnedByMonths: [statsMonthM2.earned, statsMonthM1.earned, statsThisMonth.earned],\n    months: [months[thisMonth - 2], months[thisMonth - 1], months[thisMonth]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/anton/Документы/GitHub/ElbrusHP/phase_3/Z_ITOGOVIY_PROECT/ITOG_FREELANCE_OFFERS/freelance-offers-aggregator/frontend/src/components/pages/profile/ProfileStats.jsx"],"names":["React","useSelector","BarsChart","LineChart","ProfileStats","startedProjects","finishedProjects","favourites","state","slice","user","offers","favouritesAsObjects","forEach","fav","favOffer","find","offer","_id","push","months","dateNow","Date","thisMonth","getUTCMonth","thisDay","getUTCDate","thisYear","getUTCFullYear","statsThisMonth","name","start","parse","year","earned","statsMonthM1","statsMonthM2","project","finishedAtTS","startedAtTS","reduce","sum","item","Number","budget","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport BarsChart from '../../BarsChart';\nimport LineChart from '../../LineChart';\n\nexport default function ProfileStats() {\n\n  const { startedProjects, finishedProjects, favourites } = useSelector(state => state.slice.user)\n  const offers = useSelector(state => state.slice.offers)\n\n  const favouritesAsObjects = []\n  favourites.forEach(fav => {\n    const favOffer = offers.find(offer => offer._id == fav)\n    favouritesAsObjects.push(favOffer)\n  })\n\n  const months = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']\n\n  const dateNow = new Date()\n  const thisMonth = dateNow.getUTCMonth(); //months from 1-12\n  const thisDay = dateNow.getUTCDate();\n  const thisYear = dateNow.getUTCFullYear();\n\n  const statsThisMonth = {\n    name: months[thisMonth],\n    start: Date.parse(new Date(thisYear, thisMonth, 1)),\n    year: thisYear,\n    startedProjects: [],\n    finishedProjects: [],\n    earned: 0\n  }\n\n  const statsMonthM1 = {\n    name: months[thisMonth - 1],\n    start: Date.parse(new Date(thisYear, thisMonth - 1, 1)),\n    year: thisYear,\n    startedProjects: [],\n    finishedProjects: [],\n    earned: 0\n  }\n\n  const statsMonthM2 = {\n    name: months[thisMonth - 2],\n    start: Date.parse(new Date(thisYear, thisMonth - 2, 1)),\n    year: thisYear,\n    startedProjects: [],\n    finishedProjects: [],\n    earned: 0\n  }\n\n  finishedProjects.forEach(project => {\n    if (project.finishedAtTS >= statsThisMonth.start) {\n      statsThisMonth.finishedProjects.push(project)\n      return\n    } else if (project.finishedAtTS >= statsMonthM1.start && project.finishedAtTS < statsThisMonth.start) {\n      statsMonthM1.finishedProjects.push(project)\n      return\n    } else if (project.finishedAtTS >= statsMonthM2.start && project.finishedAtTS < statsMonthM1.start) {\n      statsMonthM2.finishedProjects.push(project)\n      return\n    }\n  })\n\n\n  startedProjects.forEach(project => {\n    if (project.startedAtTS >= statsThisMonth.start) {\n      statsThisMonth.startedProjects.push(project)\n      return\n    } else if (project.startedAtTS >= statsMonthM1.start && project.startedAtTS < statsThisMonth.start) {\n      statsMonthM1.startedProjects.push(project)\n      return\n    } else if (project.startedAtTS >= statsMonthM2.start && project.startedAtTS < statsMonthM1.start) {\n      statsMonthM2.startedProjects.push(project)\n      return\n    }\n  })\n\n  statsThisMonth.earned = statsThisMonth.finishedProjects.reduce((sum, item) => sum + Number(item.budget), 0)\n  statsMonthM1.earned = statsMonthM1.finishedProjects.reduce((sum, item) => sum + Number(item.budget), 0)\n  statsMonthM2.earned = statsMonthM2.finishedProjects.reduce((sum, item) => sum + Number(item.budget), 0)\n\n  // console.log(yearNow, monthNow, dayNow)\n  // const dt = new Date();\n  // console.log(startOfMonth(dt).toString());\n\n  return (\n    <>\n      <BarsChart\n        startedByMonths={[statsMonthM2.startedProjects.length, statsMonthM1.startedProjects.length, statsThisMonth.startedProjects.length]}\n        finishedByMonths={[statsMonthM2.finishedProjects.length, statsMonthM1.finishedProjects.length, statsThisMonth.finishedProjects.length]}\n        months={[months[thisMonth - 2], months[thisMonth - 1], months[thisMonth]]}\n      />\n      <LineChart\n        earnedByMonths={[statsMonthM2.earned, statsMonthM1.earned, statsThisMonth.earned]}\n        months={[months[thisMonth - 2], months[thisMonth - 1], months[thisMonth]]}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}