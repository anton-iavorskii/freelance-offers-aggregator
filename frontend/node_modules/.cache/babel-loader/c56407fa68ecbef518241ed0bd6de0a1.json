{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport initialState from './initialState';\nimport axios from 'axios';\nconst axiosQ = axios.create({\n  withCredentials: true\n});\nconst currencyRates = {\n  '$': 72.94,\n  '₴': 2.66\n};\nexport const slice = createSlice({\n  name: 'slice',\n  initialState: initialState,\n  reducers: {\n    loginAC: (state, action) => {\n      const {\n        firstName,\n        lastName,\n        _id,\n        favourites,\n        startedProjects,\n        finishedProjects\n      } = action.payload;\n      state.user.isAuth = true;\n      state.user.firstName = firstName;\n      state.user.lastName = lastName;\n      state.user._id = _id;\n      state.user.favourites = favourites;\n      state.user.startedProjects = startedProjects.map(project => {\n        return { ...project,\n          hasExpandedSize: false\n        };\n      });\n      state.user.finishedProjects = finishedProjects.map(project => {\n        return { ...project,\n          hasExpandedSize: false\n        };\n      });\n      state.offers = state.offers.map(offer => {\n        if (favourites.includes(offer._id)) return { ...offer,\n          isFavourite: true\n        };else return offer;\n      });\n    },\n    addOffers: (state, action) => {\n      const tags = [];\n      state.offers = action.payload.map(offer => {\n        offer.tags.forEach(tag => tags.push(tag));\n        if (offer.hasProjectBudget === false && offer.hasHourlyRate === false) return { ...offer,\n          isFavourite: false,\n          hasExpandedSize: false\n        };\n        let currency = '₽';\n        if (offer.budget === 'Цена договорная') currency = '';else if (offer.budget.includes('$')) currency = '$';else if (offer.budget.includes('₴')) currency = '₴';else if (offer.budget.includes('грн')) currency = '₴';else if (offer.budget.includes('руб')) currency = '₽';\n        if (offer.budget !== 'Цена договорная') var budgetNumber = Number(offer.budget.replace(/[^0-9]/g, ''));\n        let budgetAbsolute;\n        if (currency === '₽') budgetAbsolute = budgetNumber;else if (currency === '₴') {\n          budgetAbsolute = Math.round(budgetNumber * currencyRates['₴'] / 100) * 100;\n        } else if (currency === '$') {\n          budgetAbsolute = Math.round(budgetNumber * currencyRates['$'] / 100) * 100;\n        }\n        return { ...offer,\n          budget: budgetNumber,\n          budgetAbsolute,\n          currency,\n          isFavourite: false,\n          hasExpandedSize: false\n        };\n      });\n      state.tags = [...new Set(tags)];\n    },\n    logoutAC: state => {\n      state.user = {\n        isAuth: false,\n        _id: undefined,\n        firstName: undefined,\n        lastName: undefined,\n        favourites: [],\n        startedProjects: [],\n        finishedProjects: []\n      };\n      state.offers = state.offers.map(offer => {\n        return { ...offer,\n          isFavourite: false\n        };\n      });\n      state.view.profileActiveTab = 1;\n    },\n    // Card sizes\n    changeComponentSizeAC: (state, action) => {\n      state.view.componentsSize = Number(action.payload);\n    },\n    expandCardAC: (state, action) => {\n      state.offers = state.offers.map(offer => {\n        if (offer._id === action.payload) return { ...offer,\n          hasExpandedSize: true\n        };else return { ...offer,\n          hasExpandedSize: false\n        };\n      });\n    },\n    closeExpandedAC: state => {\n      state.offers = state.offers.map(offer => {\n        return { ...offer,\n          hasExpandedSize: false\n        };\n      });\n    },\n    expandProjectCardAC: (state, action) => {\n      state.user.startedProjects = state.user.startedProjects.map(offer => {\n        if (offer._id === action.payload) return { ...offer,\n          hasExpandedSize: true\n        };else return { ...offer,\n          hasExpandedSize: false\n        };\n      });\n      state.user.finishedProjects = state.user.finishedProjects.map(offer => {\n        if (offer._id === action.payload) return { ...offer,\n          hasExpandedSize: true\n        };else return { ...offer,\n          hasExpandedSize: false\n        };\n      });\n    },\n    closeExpandedProjectCardAC: state => {\n      state.user.startedProjects = state.user.startedProjects.map(project => {\n        return { ...project,\n          hasExpandedSize: false\n        };\n      });\n      state.user.finishedProjects = state.user.finishedProjects.map(project => {\n        return { ...project,\n          hasExpandedSize: false\n        };\n      });\n    },\n    /// Filters \n    toggleFilterBudgetAC: state => {\n      state.view.filterBudget = !state.view.filterBudget;\n    },\n    toggleFilterFavouritesAC: state => {\n      state.view.filterFavourites = !state.view.filterFavourites;\n    },\n    filterSearchHandlerAC: (state, action) => {\n      state.view.filterSearch = action.payload;\n    },\n    filterTagsSearchHandlerAC: (state, action) => {\n      state.view.filterTagsSearch = action.payload;\n    },\n    addTagAC: (state, action) => {\n      if (!state.view.filterTags.includes(action.payload)) state.view.filterTags.push(action.payload);\n    },\n    removeTagAC: (state, action) => {\n      state.view.filterTags = state.view.filterTags.filter(tag => tag !== action.payload);\n    },\n    changeSortOptionAC: (state, action) => {\n      state.view.sortOption = action.payload;\n    },\n    // Pagination\n    setCurrentPageAC: (state, action) => {\n      state.view.currentPage = action.payload;\n    },\n    setNumberOfOffersAC: (state, action) => {\n      state.view.numberOfOffers = action.payload;\n    },\n    // Favourites\n    toggleFavouriteAC: (state, action) => {\n      state.offers = state.offers.map(offer => {\n        if (offer._id === action.payload) return { ...offer,\n          isFavourite: !offer.isFavourite\n        };else return offer;\n      });\n      if (state.user.favourites.includes(action.payload)) state.user.favourites = state.user.favourites.filter(el => el !== action.payload);else state.user.favourites.push(action.payload);\n    },\n    addToStartedProjectsAC: (state, action) => {\n      state.user.startedProjects.push({ ...action.payload,\n        hasExpandedSize: false\n      });\n      state.view.profileActiveTab = 2;\n      console.log(state.user.startedProjects);\n    },\n    addToFinishedProjectsAC: (state, action) => {\n      state.user.finishedProjects.push({ ...action.payload,\n        hasExpandedSize: false\n      });\n      state.user.startedProjects = state.user.startedProjects.filter(project => project._id !== action.payload._id);\n      state.view.profileActiveTab = 3;\n    },\n    // Profle\n    setActiveTabAC: (state, action) => {\n      state.view.profileActiveTab = action.payload;\n    }\n  }\n});\nexport const {\n  loginAC,\n  logoutAC,\n  addOffers,\n  changeComponentSizeAC,\n  expandCardAC,\n  closeExpandedAC,\n  expandProjectCardAC,\n  closeExpandedProjectCardAC,\n  toggleFilterBudgetAC,\n  toggleFilterFavouritesAC,\n  filterSearchHandlerAC,\n  filterTagsSearchHandlerAC,\n  addTagAC,\n  removeTagAC,\n  changeSortOptionAC,\n  setCurrentPageAC,\n  setNumberOfOffersAC,\n  toggleFavouriteAC,\n  addToStartedProjectsAC,\n  addToFinishedProjectsAC,\n  setActiveTabAC\n} = slice.actions; // The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n\nexport const fetchOffersThunk = () => async dispatch => {\n  // const ratesAPI = await axios('http://data.fixer.io/api/latest?access_key=9a1d7f920cf0ea42a9e6bc7a5fe03d06&symbols=USD,RUB,UAH')\n  // const { USD, RUB, UAH } = ratesAPI.data.rates\n  // currencyRates['$'] = Number(RUB) / Number(USD)\n  // currencyRates['₴'] = (Number(RUB) / Number(UAH)) / Number(USD)\n  const response = await axiosQ('http://localhost:3003/offers');\n  dispatch(addOffers(response.data.offers));\n};\nexport const logoutThunk = () => async dispatch => {\n  axiosQ.post('http://localhost:3003/logout');\n  dispatch(logoutAC());\n};\nexport const toggleFavouriteThunk = payload => () => {\n  axiosQ.patch('http://localhost:3003/users/favourite', payload);\n};\nexport const addToStartedProjectsThunk = payload => async dispatch => {\n  const response = await axiosQ.post('http://localhost:3003/users/start', payload);\n  dispatch(addToStartedProjectsAC(response.data));\n  dispatch(toggleFavouriteAC(payload._id));\n};\nexport const addToFinishedProjectsThunk = payload => async dispatch => {\n  const response = await axiosQ.post('http://localhost:3003/users/finish', payload);\n  dispatch(addToFinishedProjectsAC(response.data));\n}; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCount = state => state.counter.value;\nexport default slice.reducer;","map":{"version":3,"sources":["/home/anton/Документы/GitHub/ElbrusHP/freelance_offers/freelance-offers-aggregator/frontend/src/store/slice.js"],"names":["createSlice","initialState","axios","axiosQ","create","withCredentials","currencyRates","slice","name","reducers","loginAC","state","action","firstName","lastName","_id","favourites","startedProjects","finishedProjects","payload","user","isAuth","map","project","hasExpandedSize","offers","offer","includes","isFavourite","addOffers","tags","forEach","tag","push","hasProjectBudget","hasHourlyRate","currency","budget","budgetNumber","Number","replace","budgetAbsolute","Math","round","Set","logoutAC","undefined","view","profileActiveTab","changeComponentSizeAC","componentsSize","expandCardAC","closeExpandedAC","expandProjectCardAC","closeExpandedProjectCardAC","toggleFilterBudgetAC","filterBudget","toggleFilterFavouritesAC","filterFavourites","filterSearchHandlerAC","filterSearch","filterTagsSearchHandlerAC","filterTagsSearch","addTagAC","filterTags","removeTagAC","filter","changeSortOptionAC","sortOption","setCurrentPageAC","currentPage","setNumberOfOffersAC","numberOfOffers","toggleFavouriteAC","el","addToStartedProjectsAC","console","log","addToFinishedProjectsAC","setActiveTabAC","actions","fetchOffersThunk","dispatch","response","data","logoutThunk","post","toggleFavouriteThunk","patch","addToStartedProjectsThunk","addToFinishedProjectsThunk","selectCount","counter","value","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport initialState from './initialState';\r\nimport axios from 'axios';\r\n\r\nconst axiosQ = axios.create({ withCredentials: true });\r\n\r\nconst currencyRates = {\r\n  '$': 72.94,\r\n  '₴': 2.66\r\n}\r\n\r\nexport const slice = createSlice({\r\n  name: 'slice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    loginAC: (state, action) => {\r\n      const { firstName, lastName, _id, favourites, startedProjects, finishedProjects } = action.payload\r\n      state.user.isAuth = true\r\n      state.user.firstName = firstName\r\n      state.user.lastName = lastName\r\n      state.user._id = _id\r\n      state.user.favourites = favourites\r\n      state.user.startedProjects = startedProjects.map(project => { return { ...project, hasExpandedSize: false } })\r\n      state.user.finishedProjects = finishedProjects.map(project => { return { ...project, hasExpandedSize: false } })\r\n      state.offers = state.offers.map(offer => {\r\n        if (favourites.includes(offer._id))\r\n          return { ...offer, isFavourite: true }\r\n        else return offer\r\n      });\r\n    },\r\n\r\n    addOffers: (state, action) => {\r\n      const tags = []\r\n\r\n      state.offers = action.payload.map(offer => {\r\n        offer.tags.forEach(tag => tags.push(tag))\r\n\r\n        if (offer.hasProjectBudget === false && offer.hasHourlyRate === false)\r\n          return { ...offer, isFavourite: false, hasExpandedSize: false }\r\n\r\n        let currency = '₽'\r\n        if (offer.budget === 'Цена договорная')\r\n          currency = ''\r\n        else if (offer.budget.includes('$'))\r\n          currency = '$'\r\n        else if (offer.budget.includes('₴'))\r\n          currency = '₴'\r\n        else if (offer.budget.includes('грн'))\r\n          currency = '₴'\r\n        else if (offer.budget.includes('руб'))\r\n          currency = '₽'\r\n\r\n        if (offer.budget !== 'Цена договорная')\r\n          var budgetNumber = Number(offer.budget.replace(/[^0-9]/g, ''))\r\n\r\n        let budgetAbsolute\r\n        if (currency === '₽')\r\n          budgetAbsolute = budgetNumber\r\n        else if (currency === '₴') {\r\n          budgetAbsolute = Math.round(budgetNumber * currencyRates['₴'] / 100) * 100\r\n        }\r\n        else if (currency === '$') {\r\n          budgetAbsolute = Math.round(budgetNumber * currencyRates['$'] / 100) * 100\r\n        }\r\n        return { ...offer, budget: budgetNumber, budgetAbsolute, currency, isFavourite: false, hasExpandedSize: false }\r\n      })\r\n      state.tags = [...new Set(tags)]\r\n    },\r\n\r\n    logoutAC: (state) => {\r\n      state.user = {\r\n        isAuth: false,\r\n        _id: undefined,\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n        favourites: [],\r\n        startedProjects: [],\r\n        finishedProjects: []\r\n      }\r\n      state.offers = state.offers.map(offer => {\r\n        return { ...offer, isFavourite: false }\r\n      })\r\n      state.view.profileActiveTab = 1\r\n    },\r\n\r\n    // Card sizes\r\n\r\n    changeComponentSizeAC: (state, action) => {\r\n      state.view.componentsSize = Number(action.payload)\r\n    },\r\n\r\n\r\n    expandCardAC: (state, action) => {\r\n      state.offers = state.offers.map(offer => {\r\n        if (offer._id === action.payload)\r\n          return { ...offer, hasExpandedSize: true }\r\n        else\r\n          return { ...offer, hasExpandedSize: false }\r\n      })\r\n    },\r\n\r\n    closeExpandedAC: (state) => {\r\n      state.offers = state.offers.map(offer => {\r\n        return { ...offer, hasExpandedSize: false }\r\n      })\r\n    },\r\n\r\n    expandProjectCardAC: (state, action) => {\r\n      state.user.startedProjects = state.user.startedProjects.map(offer => {\r\n        if (offer._id === action.payload)\r\n          return { ...offer, hasExpandedSize: true }\r\n        else\r\n          return { ...offer, hasExpandedSize: false }\r\n      })\r\n      state.user.finishedProjects = state.user.finishedProjects.map(offer => {\r\n        if (offer._id === action.payload)\r\n          return { ...offer, hasExpandedSize: true }\r\n        else\r\n          return { ...offer, hasExpandedSize: false }\r\n      })\r\n    },\r\n\r\n    closeExpandedProjectCardAC: (state) => {\r\n      state.user.startedProjects = state.user.startedProjects.map(project => {\r\n        return { ...project, hasExpandedSize: false }\r\n      })\r\n      state.user.finishedProjects = state.user.finishedProjects.map(project => {\r\n        return { ...project, hasExpandedSize: false }\r\n      })\r\n    },\r\n\r\n    /// Filters \r\n\r\n    toggleFilterBudgetAC: state => {\r\n      state.view.filterBudget = !state.view.filterBudget;\r\n    },\r\n\r\n    toggleFilterFavouritesAC: state => {\r\n      state.view.filterFavourites = !state.view.filterFavourites;\r\n    },\r\n\r\n    filterSearchHandlerAC: (state, action) => {\r\n      state.view.filterSearch = action.payload;\r\n    },\r\n\r\n    filterTagsSearchHandlerAC: (state, action) => {\r\n      state.view.filterTagsSearch = action.payload;\r\n    },\r\n\r\n    addTagAC: (state, action) => {\r\n      if (!state.view.filterTags.includes(action.payload))\r\n        state.view.filterTags.push(action.payload)\r\n    },\r\n\r\n    removeTagAC: (state, action) => {\r\n      state.view.filterTags = state.view.filterTags.filter(tag => tag !== action.payload)\r\n    },\r\n\r\n    changeSortOptionAC: (state, action) => {\r\n      state.view.sortOption = action.payload;\r\n    },\r\n\r\n\r\n    // Pagination\r\n\r\n    setCurrentPageAC: (state, action) => {\r\n      state.view.currentPage = action.payload\r\n    },\r\n\r\n    setNumberOfOffersAC: (state, action) => {\r\n      state.view.numberOfOffers = action.payload\r\n    },\r\n\r\n\r\n    // Favourites\r\n\r\n    toggleFavouriteAC: (state, action) => {\r\n      state.offers = state.offers.map(offer => {\r\n        if (offer._id === action.payload)\r\n          return { ...offer, isFavourite: !offer.isFavourite }\r\n        else return offer\r\n      })\r\n\r\n      if (state.user.favourites.includes(action.payload))\r\n        state.user.favourites = state.user.favourites.filter(el => el !== action.payload)\r\n      else\r\n        state.user.favourites.push(action.payload)\r\n    },\r\n\r\n    addToStartedProjectsAC: (state, action) => {\r\n      state.user.startedProjects.push({ ...action.payload, hasExpandedSize: false })\r\n      state.view.profileActiveTab = 2\r\n      console.log(state.user.startedProjects)\r\n    },\r\n\r\n    addToFinishedProjectsAC: (state, action) => {\r\n      state.user.finishedProjects.push({ ...action.payload, hasExpandedSize: false })\r\n      state.user.startedProjects = state.user.startedProjects.filter(project => project._id !== action.payload._id)\r\n      state.view.profileActiveTab = 3\r\n    },\r\n\r\n    // Profle\r\n    setActiveTabAC: (state, action) => {\r\n      state.view.profileActiveTab = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginAC,\r\n  logoutAC,\r\n  addOffers,\r\n  changeComponentSizeAC,\r\n  expandCardAC,\r\n  closeExpandedAC,\r\n  expandProjectCardAC,\r\n  closeExpandedProjectCardAC,\r\n  toggleFilterBudgetAC,\r\n  toggleFilterFavouritesAC,\r\n  filterSearchHandlerAC,\r\n  filterTagsSearchHandlerAC,\r\n  addTagAC,\r\n  removeTagAC,\r\n  changeSortOptionAC,\r\n  setCurrentPageAC,\r\n  setNumberOfOffersAC,\r\n  toggleFavouriteAC,\r\n  addToStartedProjectsAC,\r\n  addToFinishedProjectsAC,\r\n  setActiveTabAC\r\n} = slice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const fetchOffersThunk = () => async dispatch => {\r\n  // const ratesAPI = await axios('http://data.fixer.io/api/latest?access_key=9a1d7f920cf0ea42a9e6bc7a5fe03d06&symbols=USD,RUB,UAH')\r\n  // const { USD, RUB, UAH } = ratesAPI.data.rates\r\n  // currencyRates['$'] = Number(RUB) / Number(USD)\r\n  // currencyRates['₴'] = (Number(RUB) / Number(UAH)) / Number(USD)\r\n\r\n  const response = await axiosQ('http://localhost:3003/offers')\r\n  dispatch(addOffers(response.data.offers));\r\n};\r\n\r\nexport const logoutThunk = () => async dispatch => {\r\n  axiosQ.post('http://localhost:3003/logout')\r\n  dispatch(logoutAC())\r\n}\r\n\r\nexport const toggleFavouriteThunk = (payload) => () => {\r\n  axiosQ.patch('http://localhost:3003/users/favourite', payload)\r\n}\r\n\r\nexport const addToStartedProjectsThunk = (payload) => async dispatch => {\r\n  const response = await axiosQ.post('http://localhost:3003/users/start', payload)\r\n  dispatch(addToStartedProjectsAC(response.data))\r\n  dispatch(toggleFavouriteAC(payload._id))\r\n}\r\n\r\nexport const addToFinishedProjectsThunk = (payload) => async dispatch => {\r\n  const response = await axiosQ.post('http://localhost:3003/users/finish', payload)\r\n  dispatch(addToFinishedProjectsAC(response.data))\r\n}\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}